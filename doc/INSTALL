This file contains intructions for installing a new instance.

Requires Ubuntu 14.04 LTS

Upgrade instructions.
Everything as root(sudo)
1.  Install packages
    a. Use tasksel for meta packages. This will install a number of required
       packages and their dependiencies.
       tasksel
       (Select Lamp Stack and Tomcat and press Enter)
    b. Individual packages
        apt-get install                     \
            libapache2-mod-wsgi         \
            libapache2-mod-jk           \
            python-cjson                \
            python-django               \
            python-django-piston        \
            python-mysqldb              \
            python-libxml2              \
            python-lxml                 \
            python-django-extensions    \
            python-imaging              \
            sqlite3
        If getting the mds code from source
        apt-get install git


2.  Create /var/local/www if it does not exist. This will be the document root
    where the mds urls and files get served from.
    a. mkdir -p /var/local/www/webapps/mds
    b. mkdir -p /var/local/www/static
    c. mkdir -p /var/local/www/media
    d. mkdir -p /var/local/www/wsgi/scripts
3.  Create the directory for the wsgi script file and copy it

6.  Create the mds database and set up access.Use your own password instead
    of **** below.
    a.  Open a MySQL prompt.
        mysql -u root -p
        CREATE DATABASE mds;
        CREATE USER 'mds'@'localhost' IDENTIFIED BY '****';
        GRANT ALL ON mds.* TO 'mds'@'localhost';
        exit;

3. Install and set up the mds code
    a. From source:
       mkdir  ~/git
       cd ~/git
       git clone https://github.com/SanaMobile/sana.mds.git
    b. Download the package from:
       // TODO
    c. Copy the src/mds/settings.py.tmpl file to settings.py and adjust the
       value of any values
    d. intialize mds
        chdir sana.mds/src
        ./manage.py syncdb
        ./manage.py collectic static
    d. Copy or link the contents of src/mds to
       /var/local/www/webapps/mds
    e. cp include/mds/wsgi/scripts/mds.wsgi /var/local/www/wsgi/scripts/mds.wsgi

4. Update permissions for the document root.
    a. chown -R www-data:www-data /var/local/www

5.  Set up encryption. (https://help.ubuntu.com/12.04/serverguide/certificates-and-security.html)
    a. Create your own certificate and key
       openssl genrsa -des3 -out server.key 1024
       openssl rsa -in server.key -out server.key.insecure
       openssl req -new -key server.key -out server.csr
       openssl x509 -req -days 365 -in server.csr -signkey server.key.insecure -out server.crt
       (You will be prompted for some information. Type in country, state, city,
        org, common name. You can skip challenge password and company name)
    b. Copy the cert and key
       cp server.crt /etc/ssl/certs
       cp server.key /etc/ssl/private

6.  Apache configs:
    a. Copy apache config and site files
       cp ../include/apache2/* /etc/apache2/
    b. Enable sites
       a2ensite sana-default.conf
       a2ensite sana-default-ssl.conf
    c. Set mds environment variables
       echo 'export MDS_DIR=/var/local/www' >> /etc/apache2/envvars

7.  Restart Apache and check connection:
    a.  service apache2 restart
    b.  You should now be able to access:
        http://<your-server>/mds/
        https://<your-server>/mds/

Ignore the follwoing steps if running MDS in standalone mode.
8.  Configure Tomcat
    a.  Just follow old manual install instructions ignoring any references to
        the older OpenMRS version.
        http://sana.mit.edu/wiki/index.php?title=Setup_Servers#Setup_and_Configure_Tomcat

9.  OpenMRS Install-1.9.7 release
    a.  Download
        http://openmrs.org/download/
    b. Follow installation instructions:
        https://wiki.openmrs.org/display/docs/Installing+OpenMRS

10. Add Modules through browser(OpenMRS Administration --> Manage Modules)
    a. Webservices.REST
       Go to the module settings page in the Admin and set the
       "Webservices REST Uri Prefix" to http://<ip-address>[:port]/openmrs/
    b. HTMLFormEntry
    c. LogManager
    d. Sana module - get the latest beta version
        http://demo.sana.csail.mit.edu/src/openmrs/

11. Configure OpenMRS for Sana
    Again, follow current release instructions and ignore any references to
    older versions of OpenMRS
    http://sana.mit.edu/wiki/index.php?title=OpenMRS_Configuration
